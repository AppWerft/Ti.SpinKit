/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.spinkit;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;
import android.widget.LinearLayout.LayoutParams;
import android.widget.LinearLayout;
import com.github.ybq.android.spinkit.SpinKitView;
//import org.appcelerator.kroll.common.Log;
import com.github.ybq.android.spinkit.sprite.Sprite;
import com.github.ybq.android.spinkit.style.*;

public class SpinnerView extends TiUIView {
	SpinKitView mSpinKitView;
	public SpinnerView(final TiViewProxy proxy) {
		super(proxy);
		LayoutParams lp = new LayoutParams(LayoutParams.WRAP_CONTENT,
				LayoutParams.WRAP_CONTENT);
		LinearLayout container = new LinearLayout(proxy.getActivity());
		container.setLayoutParams(lp);
		mSpinKitView = new SpinKitView(proxy.getActivity());
		container.addView(mSpinKitView);
		setNativeView(container);
	}

	public void addSpinner(int spinnerType, int spinnerColor) {
		Sprite drawable = null;
		switch (spinnerType) {
		case 0:
			drawable = new RotatingPlane();
			break;
		case 1:
			 drawable = new DoubleBounce();
			break;
		case 2:
            drawable = new Wave();
            break;
        case 3:
            drawable = new WanderingCubes();
            break;
        case 4:
            drawable = new Pulse();
            break;
        case 5:
            drawable = new ChasingDots();
            break;
        case 6:
            drawable = new ThreeBounce();
            break;
        case 7:
            drawable = new Circle();
            break;
        case 8:
            drawable = new CubeGrid();
            break;
        case 9:
            drawable = new FadingCircle();
            break;
        case 10:
            drawable = new FoldingCube();
            break;
        case 11:
            drawable = new RotatingCircle();
            break;
		}
		drawable.setColor(spinnerColor);
		mSpinKitView.setIndeterminateDrawable(drawable);
	}

	@Override
	public void processProperties(KrollDict d) {
		super.processProperties(d);
	}
}